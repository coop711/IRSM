{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Untitled\"\nauthor: \"coop711\"\ndate: '2017 10 6 '\noutput: html_document\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n## Packages and Data\n\n```{r cars}\nlibrary(GISTools)\nlibrary(tidyverse)\nlibrary(broom)\ndata(georgia)\nls()\n```\n\n## Georgia Maps\n\n```{r, fig.width = 7, fig.height = 7}\nplot(georgia)\nplot(georgia, \n     col = \"red\", \n     bg = \"wheat\")\nclass(georgia)\ngeorgia_outline <- gUnaryUnion(georgia, \n                               id = NULL)\nplot(georgia, \n     asp = 1, \n     col = \"red\", \n     bg = \"wheat\", \n     lty = 2, \n     border = \"blue\")\nplot(georgia_outline, \n     asp = 1, \n     lwd = 3, \n     add = TRUE)\ntitle(main = \"The State of Georgia\",\n      font.main = 2,\n      cex.main = 1.5, \n      sub = \"and its counties\",\n      font.sub = 3,\n      col.sub = \"blue\")\npar(mfrow = c(1, 2),\n    mar = c(2, 0, 3, 0))\nplot(georgia, \n     col = \"red\", \n     bg = \"wheat\")\ntitle(\"georgia\")\nplot(georgia2, \n     col = \"orange\",\n     bg = \"lightyellow\")\ntitle(\"georgia2\")\npar(mfrow = c(1,1))\n```\n\n## georgia\n\n```{r, fig.width = 7, fig.height = 7}\nstr(georgia@data)\ngeorgia$Name\ngeorgia$id <- as.character(0:(nrow(georgia@data) - 1))\ngeorgia_df <- georgia %>%\n  tidy()\nstr(georgia_df)\ntable(sort(georgia_df$id))\ngeorgia_df <- left_join(georgia@data, georgia_df, \n                        by = c(\"id\" = \"id\"))\nstr(georgia_df)\nggplot(georgia_df, aes(x = long, y = lat, group = group)) +\n  geom_polygon(fill = \"white\", colour = \"black\") +\n  geom_text(aes(x = Longitud, y = Latitude, label = Name), size = 1) +\n  coord_map()\n```\n\n### County Names \n\n```{r, fig.width = 7, fig.height = 7}\nLat <- data.frame(georgia)[, 1] #> georgia$Latitude\nLon <- data.frame(georgia)[, 2] #> georgia$Longitud\nNames <- data.frame(georgia)[, 13] #> georgia$Name\nplot(georgia, \n     col = NA)\ntext(Lon, Lat, \n     labels = Names, \n     cex = 0.5) #> Better than `pointLabel`\n# pl <- pointLabel(Lon, Lat, Names, offset = 0, cex = 0.5)\n```\n\n### Subregion\n\n```{r, fig.width = 7, fig.height = 7}\ncounties <- c(\"Jefferson\", \"Jenkins\", \"Johnson\", \"Washington\", \"Glascock\", \"Emanuel\", \"Candler\", \"Bulloch\", \"Screven\", \"Richmond\", \"Burke\")\ncounties_idx <- which(georgia$Name %in% counties)\ncounties_idx\ngeorgia_sub <- georgia[counties_idx, ]\nplot(georgia_sub, \n     col = \"gold1\", \n     border = \"grey\")\nplot(georgia_outline, \n     add = TRUE, \n     lwd = 2)\ntext(Lon[counties_idx], Lat[counties_idx], \n     labels = Names[counties_idx], \n     cex = 1)\nplot(georgia, \n     border = \"grey\", \n     lwd = 0.5)\nplot(georgia_sub, \n     col = \"lightblue\", \n     add = TRUE)\nplot(georgia_outline,\n     lwd = 2, \n     add = TRUE)\ntitle(\"Georgia with a subset of counties\")\n```\n\n## Open Street Map\n\n```{r, fig.width = 7, fig.height = 7}\n# install.packages(\"OpenStreetMap\", dependencies = TRUE)\nlibrary(OpenStreetMap)\nul <- as.vector(cbind(bbox(georgia_sub)[2, 2], \n                      bbox(georgia_sub)[1, 1]))\nlr <- as.vector(cbind(bbox(georgia_sub)[2, 1], \n                      bbox(georgia_sub)[1, 2]))\nMyMap <- openmap(upperLeft = ul, \n                 lowerRight = lr, \n                 zoom = 9, \n                 type = 'osm') #> Try various `maptype`\nplot(MyMap, removeMargin = FALSE)\nplot(spTransform(georgia_sub, \n                 osm()), \n     lwd = 2, \n     add = TRUE)\n```\n\n## RgoogleMaps, PBSmapping\n\n```{r, fig.width = 7, fig.height = 7}\n# install.packages(c(\"RgoogleMaps\", \"PBSmapping\"))\nlibrary(RgoogleMaps)\nlibrary(PBSmapping)\nshp <- SpatialPolygons2PolySet(georgia_sub)\nbb <- qbbox(lat = shp[, \"Y\"], lon = shp[, \"X\"])\nMyMap <- GetMap.bbox(bb$lonR, bb$latR, destfile = \"DC.jpg\")\nPlotPolysOnStaticMap(MyMap,\n                     asp = 1,\n                     shp, \n                     lwd = 2, \n                     col = rgb(0.25, 0.25, 0.25, 0.025),\n                     add = FALSE)\n```\n\n## Mapping Polygons and Attributes \n\n### Newhaven \n\n```{r, fig.width = 7, fig.height = 7}\nrm(list = ls())\ndata(newhaven)\nvacant_shades <- auto.shading(blocks$P_VACANT)\nvacant_shades\nchoropleth(blocks, \n           v = blocks$P_VACANT)\nchoro.legend(533000, 161000, \n             sh = vacant_shades)\nvacant_shades <- auto.shading(blocks$P_VACANT, \n                              n = 7)\nchoropleth(blocks, \n           v = blocks$P_VACANT, \n           shading = vacant_shades)\nchoro.legend(533000, 161000, \n             sh = vacant_shades)\nvacant_shades <- auto.shading(blocks$P_VACANT, \n                              cols = brewer.pal(5, \"Greens\"))\nchoropleth(blocks, \n           v = blocks$P_VACANT, \n           shading = vacant_shades)\nchoro.legend(533000, 161000, \n             sh = vacant_shades)\nvacant_shades <- auto.shading(blocks$P_VACANT, \n                              cutter = rangeCuts,\n                              n = 5,\n                              cols = brewer.pal(5, \"Blues\"))\nchoropleth(blocks, \n           v = blocks$P_VACANT, \n           shading = vacant_shades)\nchoro.legend(533000, 161000, \n             sh = vacant_shades)\nvacant_shades\n```\n\n### Codes\n\n```{r}\nchoropleth\nauto.shading\n```\n\n## Mapping Points and Attributes\n\n```{r, fig.width = 7, fig.height = 7}\nplot(breach)\nplot(blocks)\nplot(breach, \n     add = TRUE)\nplot(blocks)\nplot(breach, \n     add = TRUE, \n     pch = '@')\nplot(blocks)\nplot(breach, \n     add = TRUE, \n     pch = 16)\nplot(blocks)\nplot(breach, \n     add = TRUE, \n     pch = 1,\n     col = \"red\")\nbrewer.pal(5, \"Reds\")\npie(rep(1, 5), col = brewer.pal(5, \"Reds\"))\nadd.alpha(brewer.pal(5, \"Reds\"), .50)\nplot(blocks)\nplot(breach, \n     add = TRUE, \n     pch = 1,\n     col = \"#DE2D2680\")\n```\n\n### Quakes\n\n```{r, fig.width = 7, fig.height = 7}\ndata(quakes)\nhead(quakes)\nclass(quakes)\ncoords_quakes <- cbind(long = quakes$long, \n                       lat = quakes$lat)\nstr(coords_quakes)\n#> SpatialPointDataFrame 만들기\nquakes_spdf <- SpatialPointsDataFrame(coords_quakes, data = data.frame(quakes))\npar(mfrow = c(1, 2))\nplot(quakes_spdf)\nplot(quakes_spdf, pch = 1, col = '#FB6A4A80')\npar(mfrow = c(1, 1))\nlibrary(maps)\nplot(quakes_spdf, pch = 1, col = '#FB6A4A80')\nmap('world2', fill = FALSE, add = TRUE)\n```\n\n### `georgia.polys`\n\n```{r, fig.width =7, fig.height = 7}\ndata(georgia)\nclass(georgia.polys)\nsummary(georgia.polys)\nstr(georgia.polys)\ntmp <- georgia.polys[c(1, 3, 151, 113)]\nt1 <- Polygon(tmp[1]); t1 <- Polygons(list(t1), \"1\")\nt2 <- Polygon(tmp[2]); t2 <- Polygons(list(t2), \"2\")\nt3 <- Polygon(tmp[3]); t3 <- Polygons(list(t3), \"3\")\nt4 <- Polygon(tmp[4]); t4 <- Polygons(list(t4), \"4\")\ntmp_Sp <- SpatialPolygons(list(t1, t2, t3, t4), 1:4)\nplot(tmp_Sp)\nnames <- c(\"Appling\", \"Bacon\", \"Wayne\", \"Pierce\")\ntmp_spdf <- SpatialPolygonsDataFrame(tmp_Sp, data = data.frame(names))\ndata.frame(tmp_spdf)\ntmp_spdf@data\nplot(tmp_spdf, col = 2:5)\n```\n\n### `quakes`\n\n```{r, fig.width = 7, fig.height = 7}\npar(mfrow = c(2, 2))\nchoropleth(quakes_spdf, \n           v = quakes$mag)\nshades <- auto.shading(quakes$mag, \n                       n = 6,\n                       cols = brewer.pal(6, \"Greens\"))\nstr(shades)\nchoropleth(quakes_spdf, \n           v = quakes$mag,\n           shading = shades,\n           pch = 1)\nshades$cols <- add.alpha(shades$cols, 0.5)\nchoropleth(quakes_spdf, \n           v = quakes$mag,\n           shading = shades,\n           pch = 20)\nmag_z <- (quakes$mag - min(quakes$mag)) / max(quakes$mag)\nplot(quakes_spdf, \n     cex = mag_z * 3,\n     pch = 1,\n     col = '#FB6A4A80')\npar(mfrow = c(1, 1))\n```\n\n```{r, fig.width = 7, fig.height = 7}\npar(mfrow = c(1, 2))\ntmp2 <- cut(quakes$mag, \n            fivenum(quakes$mag),\n            include.lowest = TRUE)\nstr(tmp2)\nclass_mag <- match(tmp2, levels(tmp2))\nstr(class_mag)\npch_var <- c(0, 1, 2, 5)\nplot(quakes_spdf,\n     pch = pch_var[class_mag],\n     cex = 0.7,\n     col = '#252525B3')\nindex_1 <- (quakes$mag >= 4 & quakes$mag < 5) + 0\nindex_2 <- (quakes$mag >= 5 & quakes$mag < 5.5) * 2\nindex_3 <- (quakes$mag >= 5.5) * 3\ncbind(index_1, index_2, index_3)\nclass_mag2 <- index_1 + index_2 + index_3\nclass_mag2\ncol_var <- brewer.pal(3, \"Blues\")\nplot(quakes_spdf,\n     col = col_var[class_mag2],\n     cex = 1.4,\n     pch = 20)\npar(mfrow = c(1, 1))\n```\n\n## RgoogleMaps\n\n```{r, fig.width = 7, fig.height = 7}\nlibrary(RgoogleMaps)\nclass(quakes$lat)\nMyMap <- MapBackground(lat = quakes$lat, \n                       lon = quakes$long,\n                       zoom = 10)\nPlotOnStaticMap(MyMap, \n               quakes$lat,\n               quakes$long,\n               cex = mag_z + 0.3,\n               pch = 1,\n               col = '#FB6A4A80')\nMyMap <- MapBackground(lat = quakes$lat, \n                       lon = quakes$long,\n                       zoom = 10,\n                       maptype = \"satellite\")\nPlotOnStaticMap(MyMap, \n               quakes$lat,\n               quakes$long,\n               cex = mag_z + 0.3,\n               pch = 1,\n               col = '#FB6A4A80')\n```\n\n\n\n",
    "created" : 1507269154878.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3379889987",
    "id" : "E88BA286",
    "lastKnownWriteTime" : 1507292752,
    "last_content_update" : 1507292754616,
    "path" : "~/Google 드라이브/Works/Class/Data_Science/R.WD/IRSM/R/georgia.Rmd",
    "project_path" : null,
    "properties" : {
        "last_setup_crc32" : "86913E4Abb338d19",
        "tempName" : "Untitled2"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}