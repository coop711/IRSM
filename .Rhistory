# pl <- pointLabel(Lon, Lat, Names, offset = 0, cex = 0.5)
counties <- c("Jefferson", "Jenkins", "Johnson", "Washington", "Glascock", "Emanuel", "Candler", "Bulloch", "Screven", "Richmond", "Burke")
counties.idx <- which(georgia$Name %in% counties)
counties.idx
counties <- c("Jefferson", "Jenkins", "Johnson", "Washington", "Glascock", "Emanuel", "Candler", "Bulloch", "Screven", "Richmond", "Burke")
counties_idx <- which(georgia$Name %in% counties)
counties_idx
georgia_sub <- georgia[counties_idx, ]
plot(georgia_sub, col = "gold1", border = "grey")
plot(georgia.outline, add = TRUE, lwd = 2)
counties <- c("Jefferson", "Jenkins", "Johnson", "Washington", "Glascock", "Emanuel", "Candler", "Bulloch", "Screven", "Richmond", "Burke")
counties_idx <- which(georgia$Name %in% counties)
counties_idx
georgia_sub <- georgia[counties_idx, ]
plot(georgia_sub, col = "gold1", border = "grey")
plot(georgia.outline, add = TRUE, lwd = 2)
counties <- c("Jefferson", "Jenkins", "Johnson", "Washington", "Glascock", "Emanuel", "Candler", "Bulloch", "Screven", "Richmond", "Burke")
counties_idx <- which(georgia$Name %in% counties)
counties_idx
georgia_sub <- georgia[counties_idx, ]
plot(georgia_sub, col = "gold1", border = "grey")
plot(georgia.outline, add = TRUE, lwd = 2)
text(Lon[counties_idx], Lat[counties_idx], labels = Names[counties.idx], cex = 1.5)
counties <- c("Jefferson", "Jenkins", "Johnson", "Washington", "Glascock", "Emanuel", "Candler", "Bulloch", "Screven", "Richmond", "Burke")
counties_idx <- which(georgia$Name %in% counties)
counties_idx
georgia_sub <- georgia[counties_idx, ]
plot(georgia_sub, col = "gold1", border = "grey")
plot(georgia.outline, add = TRUE, lwd = 2)
text(Lon[counties_idx], Lat[counties_idx], labels = Names[counties.idx], cex = 1)
install.packages("OpenStreetMap", dependencies = TRUE)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
MyMap <- openmap(ul, lr, 9, 'mapquest')
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'mapquest')
?openmap
MyMap <- openmap(ul, lr, 9, osm')
''
MyMap <- openmap(ul, lr, 9, 'osm')
plot(MyMap, removeMargin = FALSE)
install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'osm')
install.packages("OpenStreetMap", dependencies = TRUE)
plot(MyMap, removeMargin = FALSE)
plot(spTransform(georgia_sub, osm()), lwd = 2, add = TRUE)
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'maptoolkit-topo')
plot(MyMap, removeMargin = FALSE)
plot(spTransform(georgia_sub, osm()), lwd = 2, add = TRUE)
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'osm-bw')
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'osm-bw')
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'waze')
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'stamen-toner')
plot(MyMap, removeMargin = FALSE)
plot(spTransform(georgia_sub, osm()), lwd = 2, add = TRUE)
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'bing')
plot(MyMap, removeMargin = FALSE)
plot(spTransform(georgia_sub, osm()), lwd = 2, add = TRUE)
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'mapbox')
plot(MyMap, removeMargin = FALSE)
plot(spTransform(georgia_sub, osm()), lwd = 2, add = TRUE)
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'esri')
plot(MyMap, removeMargin = FALSE)
plot(spTransform(georgia_sub, osm()), lwd = 2, add = TRUE)
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'osm-transport')
plot(MyMap, removeMargin = FALSE)
plot(spTransform(georgia_sub, osm()), lwd = 2, add = TRUE)
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'esri-topo')
plot(MyMap, removeMargin = FALSE)
plot(spTransform(georgia_sub, osm()), lwd = 2, add = TRUE)
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'opencyclemap')
plot(MyMap, removeMargin = FALSE)
plot(spTransform(georgia_sub, osm()), lwd = 2, add = TRUE)
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'osm-public-transport')
plot(MyMap, removeMargin = FALSE)
plot(spTransform(georgia_sub, osm()), lwd = 2, add = TRUE)
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'osm-bbike')
plot(MyMap, removeMargin = FALSE)
plot(spTransform(georgia_sub, osm()), lwd = 2, add = TRUE)
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'hillshade')
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'skobbler')
plot(MyMap, removeMargin = FALSE)
plot(spTransform(georgia_sub, osm()), lwd = 2, add = TRUE)
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'apple-iphoto')
plot(MyMap, removeMargin = FALSE)
plot(spTransform(georgia_sub, osm()), lwd = 2, add = TRUE)
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'nps')
# install.packages("OpenStreetMap", dependencies = TRUE)
library(OpenStreetMap)
ul <- as.vector(cbind(bbox(georgia_sub)[2, 2],
bbox(georgia_sub)[1, 1]))
lr <- as.vector(cbind(bbox(georgia_sub)[2, 1],
bbox(georgia_sub)[1, 2]))
MyMap <- openmap(ul, lr, 9, 'osm')
plot(MyMap, removeMargin = FALSE)
plot(spTransform(georgia_sub, osm()), lwd = 2, add = TRUE)
?spTransform
install.packages(c("RgoogleMaps", "PBSmapping"))
library(RgoogleMaps)
library(PBSmapping)
plotPolysOnStaticMap(MyMap, shp, lwd = 2, col = rgb(0.25, 0.25, 0.25, 0.025),
add = FALSE)
library(RgoogleMaps)
library(PBSmapping)
shp <- SpatialPolygons2PolySet(georgia_sub)
bb <- qbbox(lat = shp[, "Y"], lon = shp[, "X"])
MyMap <- GetMap.bbox(bb$lonR, bb$latR, destfile = "DC.jpg")
plotPolysOnStaticMap(MyMap, shp, lwd = 2, col = rgb(0.25, 0.25, 0.25, 0.025),
add = FALSE)
PlotPolysOnStaticMap(MyMap, shp, lwd = 2, col = rgb(0.25, 0.25, 0.25, 0.025),
add = FALSE)
PlotPolysOnStaticMap(MyMap,
asp = 1,
shp,
lwd = 2,
col = rgb(0.25, 0.25, 0.25, 0.025),
add = FALSE)
?PlotPolysOnStaticMap
?SpatialPolygons2PolySet
choropleth(blocks, blocks$P_VACANT)
plot(blocks)
summary(blocks)
summary(breach)
summary(tracts)
data.frame(blocks)
head(data.frame(blocks))
names(data.frame(blocks))
colnames(data.frame(blocks))
data.frame(blocks)$P_VACANT
blocks$P_VACANT
hist(blocks$P_VACANT)
breach_dens <- kde.points(breach, lims = tracts)
summary(breach_dens)
head(breach_dens$data)
head(data.frame(breach_dens))
breach_dens_grid <- as(breach_dens, "SpatialGridDataFrame")
summary(breach_dens_grid)
vacant_shades <- auto.shading(blocks$P_VACANT)
vacant_shades
choro.legend(533000, 161000, vacant_shades)
choropleth(blocks, blocks$P_VACANT)
vacant_shades <- auto.shading(blocks$P_VACANT)
vacant_shades
choro.legend(533000, 161000, vacant_shades)
?choropleth
?choro.legend
vacant_shades <- auto.shading(blocks$P_VACANT,
cols = brewer.pal(5, "Greens"))
vacant_shades <- auto.shading(blocks$P_VACANT,
cols = brewer.pal(5, "Greens"))
choropleth(blocks,
v = blocks$P_VACANT,
shading = vacant_shades)
choro.legend(533000, 161000,
sh = vacant_shades)
vacant_shades <- auto.shading(blocks$P_VACANT,
cols = brewer.pal(5, "Greens"))
choropleth(blocks,
v = blocks$P_VACANT,
shading = vacant_shades)
choro.legend(533000, 161000,
sh = vacant_shades)
vacant_shades <- auto.shading(blocks$P_VACANT,
n = 5,
cols = brewer.pal(5, "Blues"),
cutter = rangeCuts)
choropleth(blocks,
v = blocks$P_VACANT,
shading = vacant_shades)
choro.legend(533000, 161000,
sh = vacant_shades)
vacat_shades
vacant_shades
plot(breach)
plot(blocks)
plot(breach, add = TRUE)
plot(blocks)
plot(breach,
add = TRUE,
pch = '@')
plot(breach,
add = TRUE,
pch = 16)
plot(blocks)
plot(breach,
add = TRUE,
pch = 16)
plot(blocks)
plot(breach,
add = TRUE,
pch = 1,
col = "red")
brewer.pal(5, "Reds")
pie(rep(1, 5), col = brewer.pal(5, "Reds"))
add.alpha(brewer.pal(5, "Reds"), .50)
plot(blocks)
plot(breach,
add = TRUE,
pch = 1,
col = "#DE2D2680")
data(quakes)
head(quakes)
class(quakes)
coords_quakes <- cbind(quakes$long, quakes$lat)
str(coords_quakes)
coords_quakes <- cbind(long = quakes$long, lat = quakes$lat)
str(coords_quakes)
?cbind
?SpatialPointsDataFrame
quakes_spdf <- SpatialPointsDataFrame(coords_quakes, data = data.frame(quakes))
par(mfrow = c(1, 2))
plot(quakes.spdf)
plot(quakes_spdf, pch = 1, col = '#FB6A4A80')
par(mfrow = c(1, 1))
quakes_spdf <- SpatialPointsDataFrame(coords_quakes, data = data.frame(quakes))
par(mfrow = c(1, 2))
plot(quakes.spdf)
data(quakes)
head(quakes)
class(quakes)
coords_quakes <- cbind(long = quakes$long,
lat = quakes$lat)
str(coords_quakes)
quakes_spdf <- SpatialPointsDataFrame(coords_quakes, data = data.frame(quakes))
par(mfrow = c(1, 2))
plot(quakes.spdf)
plot(quakes_spdf, pch = 1, col = '#FB6A4A80')
par(mfrow = c(1, 2))
plot(quakes.spdf)
par(mfrow = c(1, 2))
plot(quakes_spdf)
plot(quakes_spdf, pch = 1, col = '#FB6A4A80')
library(maps)
map('world2', fill = FALSE, add = TRUE)
par(mfrow = c(1, 1))
plot(quakes_spdf, pch = 1, col = '#FB6A4A80')
par(mfrow = c(1, 1))
library(maps)
map('world2', fill = FALSE, add = TRUE)
plot(quakes_spdf, pch = 1, col = '#FB6A4A80')
map('world2', fill = FALSE, add = TRUE)
georgia[1]
georgia[[1]]
class(georgia)
summary(georgia)
?Polygons
?Polygon
class(georgia.polys)
summary(georgia.polys)
str(georgia.polys)
data(georgia)
class(georgia.polys)
summary(georgia.polys)
str(georgia.polys)
tmp <- georgia.polys[c(1, 3, 151, 113)]
t1 <- Polygon(tmp[1]); t1 <- Polygons(list(t1), "1")
t2 <- Polygon(tmp[2]); t2 <- Polygons(list(t2), "2")
t3 <- Polygon(tmp[3]); t3 <- Polygons(list(t3), "3")
t4 <- Polygon(tmp[4]); t4 <- Polygons(list(t4), "4")
tmp_Sp <- SpatialPolygons(list(t1, t2, t3, t4), 1:4)
plot(tmp_Sp)
tmp_spdf <- SpatialPolygonsDataFrame(tmp_Sp, data = data.frame(names))
names <- c("Appling", "Bacon", "Wayne", "Pierce")
tmp_spdf <- SpatialPolygonsDataFrame(tmp_Sp, data = data.frame(names))
data.frame(tmp_spdf)
tmp_spdf@data
plot(tmp_spdf, col = 2:5)
?choropleth
shades <- auto.shading(quakes$mag,
n = 6,
cols = brewer.pal(6, "Greens"))
choropleth(quakes_spdf,
v = quakes$mag,
shading = shades,
pch = 1)
shades
str(shades)
shades$cols <- add.alpha(shades$cols, 0.5)
par(mfrow = c(2, 2))
choropleth(quakes_spdf,
v = quakes$mag)
shades <- auto.shading(quakes$mag,
n = 6,
cols = brewer.pal(6, "Greens"))
str(shades)
choropleth(quakes_spdf,
v = quakes$mag,
shading = shades,
pch = 1)
shades$cols <- add.alpha(shades$cols, 0.5)
choropleth(quakes_spdf,
v = quakes$mag,
shading = shades,
pch = 20)
mag_z <- (quakes$mag - min(quakes$mag)) / max(quakes$mag)
choropleth(quakes_spdf,
cex = mag_z * 3,
pch = 1,
col = '#FB6A4A80')
par(mfrow = c(2, 2))
choropleth(quakes_spdf,
v = quakes$mag)
shades <- auto.shading(quakes$mag,
n = 6,
cols = brewer.pal(6, "Greens"))
str(shades)
choropleth(quakes_spdf,
v = quakes$mag,
shading = shades,
pch = 1)
shades$cols <- add.alpha(shades$cols, 0.5)
choropleth(quakes_spdf,
v = quakes$mag,
shading = shades,
pch = 20)
mag_z <- (quakes$mag - min(quakes$mag)) / max(quakes$mag)
plot(quakes_spdf,
cex = mag_z * 3,
pch = 1,
col = '#FB6A4A80')
?cut
tmp2 <- cut(quakes$mag,
fivenum(quakes$mag),
include.lowest = TRUE)
tmp2
str(tmp2)
class_mag <- match(tmp2, levels(tmp2))
class_mag
str(tmp2)
str(class_mag)
index_1 <- (quakes$mag >= 4 & quakes$mag < 5) + 0
index_2 <- (quakes$mag >= 5 & quakes$mag < 5.5) * 2
index_3 <- (quakes$mag >= 5.5) * 3
cbind(index_1, index_2, index_3)
class_mag2 <- index_1 + index_2 + index_3
class+mag2
class_mag2
par(mfrow = c(1, 2))
tmp2 <- cut(quakes$mag,
fivenum(quakes$mag),
include.lowest = TRUE)
str(tmp2)
class_mag <- match(tmp2, levels(tmp2))
str(class_mag)
pch_var <- c(0, 1, 2, 5)
plot(quakes_spdf,
pch = pch_var[class_mag],
cex = 0.7,
col = '#252525B3')
index_1 <- (quakes$mag >= 4 & quakes$mag < 5) + 0
index_2 <- (quakes$mag >= 5 & quakes$mag < 5.5) * 2
index_3 <- (quakes$mag >= 5.5) * 3
cbind(index_1, index_2, index_3)
class_mag2 <- index_1 + index_2 + index_3
class_mag2
col_var <- brewer.pal(3, "Blues")
plot(quakes_spdf,
col = col_var[class_mag2],
cex = 1.4,
pch = 20)
par(mfrow = c(1, 1))
?MapBackground
class(quakes$lat)
library(RgoogleMaps)
class(quakes$lat)
MyMap <- MapBackground(lat = quakes$lat,
lon = quakes$long,
zoom = 10)
?PlotOnStaticMap
library(RgoogleMaps)
class(quakes$lat)
MyMap <- MapBackground(lat = quakes$lat,
lon = quakes$long,
zoom = 10)
PlotOnStaticMap(MyMap,
quakes$lat,
quakes$long,
cex = mag_z + 0.3,
pch = 1,
col = '#FB6A4A80')
library(RgoogleMaps)
class(quakes$lat)
MyMap <- MapBackground(lat = quakes$lat,
lon = quakes$long,
zoom = 10)
PlotOnStaticMap(MyMap,
quakes$lat,
quakes$long,
cex = mag_z + 0.3,
pch = 1,
col = '#FB6A4A80')
MyMap <- MapBackground(lat = quakes$lat,
lon = quakes$long,
zoom = 10,
maptype = "satellite")
PlotOnStaticMap(MyMap,
quakes$lat,
quakes$long,
cex = mag_z + 0.3,
pch = 1,
col = '#FB6A4A80')
